{"version":3,"sources":["component/Card.js","component/Country.js","component/SearchCountry.js","App.js","serviceWorker.js","index.js"],"names":["Case","props","CardDeck","Card","bg","style","color","className","Body","Title","Text","cases","Footer","deaths","recovered","Country","text","margin","Img","variant","src","flag","country","casesCountry","deathsCountry","recoveredCountry","todaycasesCountry","todayDeathsCountry","activeCountry","criticalCountry","SearchCountry","Form","Group","controlId","Control","type","placeholder","onChange","search","App","useState","latest","setLatest","setCountry","setSearch","useEffect","axios","all","get","then","res","data","catch","err","console","log","countries","filter","item","includes","map","i","key","todayCases","todayDeaths","active","critical","countryInfo","e","target","value","queries","columns","query","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f1578e81.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, CardDeck } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const Case = (props) => {\r\n    return(\r\n    <CardDeck>\r\n  <Card\r\n   bg='secondary' style={{color:'white'}}  className=\"text-center\">\r\n    <Card.Body>\r\n      <Card.Title><strong>Cases</strong></Card.Title>\r\n      <Card.Text>\r\n        {props.cases}\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small>Last updated 4 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card\r\n   bg='danger' style={{color:'white'}} className=\"text-center\" >\r\n    <Card.Body >\r\n      <Card.Title><strong>Deaths</strong></Card.Title>\r\n      <Card.Text>\r\n        {props.deaths}\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small>Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card\r\n   bg='info' style={{color:'white'}} className=\"text-center\" >\r\n    <Card.Body>\r\n      <Card.Title><strong>Recovered</strong></Card.Title>\r\n      <Card.Text>\r\n      {props.recovered}\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small>Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n</CardDeck>\r\n)\r\n} ","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const Country = (props) => {\r\n    return(\r\n    \r\n  <Card\r\n    bg='light' \r\n    text='black'  \r\n    className=\"text-center\"\r\n    style={{margin:'10px'}}\r\n    >\r\n    <Card.Img variant=\"top\" src={props.flag} />   \r\n    <Card.Body>\r\n      <Card.Title>{props.country}</Card.Title>\r\n      <Card.Text><strong>Cases: </strong> {props.casesCountry}</Card.Text>\r\n      <Card.Text><strong>Deaths: </strong> {props.deathsCountry}</Card.Text>\r\n      <Card.Text><strong>Recovered: </strong>{props.recoveredCountry}</Card.Text>\r\n      <Card.Text><strong>Today's Cases: </strong>{props.todaycasesCountry}</Card.Text>\r\n      <Card.Text><strong>Today's Deaths: </strong>{props.todayDeathsCountry}</Card.Text>\r\n      <Card.Text><strong>Active: </strong>{props.activeCountry}</Card.Text>\r\n      <Card.Text><strong>Critical: </strong>{props.criticalCountry}</Card.Text>\r\n      <Card.Text><strong>test: </strong>jveux que ca marche</Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  \r\n)\r\n} ","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nexport const SearchCountry = (props) => {\r\n    return(\r\n  <Form.Group controlId=\"formBasicEmail\" style={{margin:'10px'}}>\r\n    <Form.Control type=\"text\" placeholder=\"Search for a country\" onChange={props.search} />\r\n  </Form.Group>\r\n    )\r\n}","import React,{ useEffect, useState } from 'react';\nimport { Case } from './component/Card'\nimport axios from 'axios';\nimport { Country } from './component/Country';\nimport { SearchCountry } from './component/SearchCountry';\nimport Columns from 'react-columns'\n\nfunction App() {\n\n  const [latest , setLatest] = useState([])\n  const [country, setCountry] = useState([])\n  const [search, setSearch] = useState([])\n\n\nuseEffect( ()=> {\n\n  axios.all([\n    axios.get('https://corona.lmao.ninja/v2/all'),\n    axios.get('https://corona.lmao.ninja/v2/countries')\n  ])\n.then(res => { \n  setLatest(res[0].data)\n  setCountry(res[1].data)})\n\n.catch(err => console.log(err))\n},[])\n\nconst filterSearch = country.filter( item =>{\n   return(\n     search !== ''?\n     item.country.includes(search)\n     :item\n   ) \n       \n})\n\nconst countries = filterSearch.map((data,i) => {\n  return (\n    <Country \n    key={i}\n    country={data.country}\n    casesCountry={data.cases}\n    deathsCountry={data.deaths}\n    recoveredCountry={data.recovered}\n    todaycasesCountry={data.todayCases}\n    todayDeathsCountry={data.todayDeaths}\n    activeCountry={data.active}\n    criticalCountry={data.critical}\n    flag={data.countryInfo.flag}/>\n  )\n})\nvar queries = [{\n  columns: 2,\n  query: 'min-width: 500px'\n}, {\n  columns: 3,\n  query: 'min-width: 1000px'\n}];\n\n  return (\n    <div className=\"App\">\n      <Case \n       cases={latest.cases}\n       deaths={latest.deaths}\n       recovered={latest.recovered}\n      />\n      <SearchCountry search={(e) => setSearch(e.target.value)}/>\n      <Columns queries={queries}>{countries}</Columns>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}